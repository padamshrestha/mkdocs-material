{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mkdocs Material \u00b6 This is a template for mkdocs material repo This template site is deployed to Template site","title":"Home"},{"location":"#mkdocs-material","text":"This is a template for mkdocs material repo This template site is deployed to Template site","title":"Mkdocs Material"},{"location":"getting-started/","text":"Hello from Getting Started \u00b6 Flow diagram ``` mermaid flowchart TD; id1[\"Data class\"] id2[\"Fetching\"] id3[\"Pandas objects\"] id4[\"Data instances\"] id5[\"Alignment\"] id6[\"Merging\"] id7[\"Data instance\"] id8[\"Updating\"] id9[\"Querying\"] id10[\"Resampling\"] id11[\"Transforming\"] id1 --> id2; id2 --> id5; id3 --> id5; id4 --> id5; id5 --> id6; id6 -->|\"creates new\"| id7; id7 --> id8; id7 --> id10; id10 -->|\"creates new\"| id7; id7 --> id11; id11 -->|\"creates new\"| id7; id8 --> id5; id7 --> id9; ``` flowchart TD; id1[\"Data class\"] id2[\"Fetching\"] id3[\"Pandas objects\"] id4[\"Data instances\"] id5[\"Alignment\"] id6[\"Merging\"] id7[\"Data instance\"] id8[\"Updating\"] id9[\"Querying\"] id10[\"Resampling\"] id11[\"Transforming\"] id1 --> id2; id2 --> id5; id3 --> id5; id4 --> id5; id5 --> id6; id6 -->|\"creates new\"| id7; id7 --> id8; id7 --> id10; id10 -->|\"creates new\"| id7; id7 --> id11; id11 -->|\"creates new\"| id7; id8 --> id5; id7 --> id9; classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } Using entity-relationship diagrams \u00b6 An [entity-relationship diagram] is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge: Entity-relationship diagram ``` mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Hello from Getting Started"},{"location":"getting-started/#hello-from-getting-started","text":"Flow diagram ``` mermaid flowchart TD; id1[\"Data class\"] id2[\"Fetching\"] id3[\"Pandas objects\"] id4[\"Data instances\"] id5[\"Alignment\"] id6[\"Merging\"] id7[\"Data instance\"] id8[\"Updating\"] id9[\"Querying\"] id10[\"Resampling\"] id11[\"Transforming\"] id1 --> id2; id2 --> id5; id3 --> id5; id4 --> id5; id5 --> id6; id6 -->|\"creates new\"| id7; id7 --> id8; id7 --> id10; id10 -->|\"creates new\"| id7; id7 --> id11; id11 -->|\"creates new\"| id7; id8 --> id5; id7 --> id9; ``` flowchart TD; id1[\"Data class\"] id2[\"Fetching\"] id3[\"Pandas objects\"] id4[\"Data instances\"] id5[\"Alignment\"] id6[\"Merging\"] id7[\"Data instance\"] id8[\"Updating\"] id9[\"Querying\"] id10[\"Resampling\"] id11[\"Transforming\"] id1 --> id2; id2 --> id5; id3 --> id5; id4 --> id5; id5 --> id6; id6 -->|\"creates new\"| id7; id7 --> id8; id7 --> id10; id10 -->|\"creates new\"| id7; id7 --> id11; id11 -->|\"creates new\"| id7; id8 --> id5; id7 --> id9; classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() }","title":"Hello from Getting Started"},{"location":"getting-started/#using-entity-relationship-diagrams","text":"An [entity-relationship diagram] is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge: Entity-relationship diagram ``` mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Using entity-relationship diagrams"}]}